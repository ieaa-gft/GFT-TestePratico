package br.com.gft.boleto.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.gft.boleto.model.request.BoletoRequest;
import br.com.gft.boleto.model.response.BoletoResponse;
import br.com.gft.boleto.service.BoletoService;
import jakarta.validation.Valid;

@RestController
@FeignClient(url = "http://localhost:8080/Boleto", name = "Boleto")
public class BoletoController {

	@Autowired
	private BoletoService boletoService;

	@PostMapping
	public ResponseEntity<BoletoResponse> incluirBoleto(
			@Valid @RequestBody BoletoRequest boletoRequest)
			throws Exception {
		return new ResponseEntity<>(boletoService.criarBoleto(boletoRequest), HttpStatus.CREATED);
	}

	@GetMapping("/pessoa/{idPessoa}")
	public ResponseEntity<List<BoletoResponse>> buscarBoletosPorPessoa(
			@PathVariable Long idPessoa) throws Exception {
		return ResponseEntity.ok(boletoService.buscarTodosBoletosPorPessoa(idPessoa));
	}

	@GetMapping("/{idBoleto}")
	public ResponseEntity<BoletoResponse> buscarPorId(
			@PathVariable("idBoleto") Long idBoleto) throws Exception {
		return ResponseEntity.ok(boletoService.buscarBoletoPorId(idBoleto));
	}

	@PutMapping("/{idBoleto}/pagar")
	public ResponseEntity<BoletoResponse> pagarBoleto(
			@PathVariable("idBoleto") Long idBoleto,
			@RequestBody Double valorPago) throws Exception {
		return ResponseEntity.ok(boletoService.pagarBoleto(idBoleto, valorPago));
	}

	@DeleteMapping("/{idBoleto}")
	public ResponseEntity<Void> deletePerson(
			@PathVariable("idBoleto") Long idBoleto) throws Exception {
		boletoService.excluirBoleto(idBoleto);
		return ResponseEntity.noContent().build();
	}

}
